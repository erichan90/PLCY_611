ex <- read.csv('example.csv')
ex <- read.csv('sales.csv')
class(ed)
str(ex)
class(ex)
head(ex)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
ex2<-read_csv('sales.csv')
str(ex2)
class(ex2)
#first, install package
install.packages("tidyverse")
#second, import the package(library)
library(tidyverse)
#use read_csv
ex2<-read_csv('sales.csv')
# Check structure
str(ex2)
# Check the class
class(ex2)
str(ex2)
ptm <- proc.time()
#use read_csv
ex2<-read_csv('sales.csv')
## Stop the clock
proc.time() - ptm
ptm1 <- proc.time()
# Pass in the entire file path if not in same directory
ex <- read.csv('sales.csv')
## Stop the clock
proc.time() - ptm1
#record the time
ptm2<- proc.time()
#use read_csv
ex2<-read_csv('sales.csv')
## Stop the clock
proc.time() - ptm2
View(ex2)
write.csv(ex, file = "example.csv")
sum(ex$Value)
sum(ex$value)
str(ex)
ex$value<-as.numeric(gsub('[$,]', '',ex$Value]))
ex$value<-as.numeric(gsub('[$,]', '',ex$Value))
ex$value
sum(ex$value)
sd(ex$Value)
sd(ex$value)
sd(ex$value)
summary(ex)
library(dplyr)
#install package
install.packages("dplyr")
#import the package
library(dplyr)
install.packages("dplyr")
ex2<-ex%>%
arrnage(year)
ex2<-ex%>%
arranage(year)
ex2<-ex%>%
arrange(year)
ex
ex2<-ex%>%
arrange(Year)
ex2
ex2<-ex%>%
arrange(Sales_Rep_Name,Year)
head(ex2)
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise(sum=sum(Value),mean=mean(Value))
summary<-ex2%>%
group_by(Year)%>%
summarise(sum=sum(Value),mean=mean(Value))
summary<-ex2%>%
select(Sales_Rep_Name,Year,Value)%>%
group_by(Sales_Rep_Name,Year)%>%
summarise(sum=sum(Value),mean=mean(Value))
summary<-ex2%>%
select(Sales_Rep_ID,Year,Value)%>%
group_by(Sales_Rep_ID,Year)%>%
summarise(sum=sum(Value),mean=mean(Value))
str(ex)
summary<-ex2%>%
select(Sales_Rep_ID,Year,Value)%>%
group_by(Sales_Rep_ID,Year)%>%
summarise(sum=sum(Value))
summary<-ex2%>%
group_by(Sales_Rep_ID)%>%
summarise(sum=sum(Value))
summary<-ex2%>%
group_by(Sales_Rep_ID)%>%
summarise_at(vars(value), funs(n(), mean, median))
summary
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(mean=mean,sum=sum))
summary
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(Avg_value=mean,Tot_value=sum))
summary
ex
summary2<-ex2%>%
group_by(Sales_Rep_Name)%>%
summarise_at(vars(value),Rep_avg=mean)
summary2<-ex2%>%
group_by(Sales_Rep_Name)%>%
summarise_at(vars(value),list(Rep_avg=mean))
summary3<-ex3%>%
group_by(year)%>%
summarise_at(vars(value),list(Year_avg=mean))
summary3<-ex2%>%
group_by(year)%>%
summarise_at(vars(value),list(Year_avg=mean))
summary3<-ex2%>%
group_by(Year)%>%
summarise_at(vars(value),list(Year_avg=mean))
summary3
data<-merge(summary,summary2,by=Sales_Rep_Name)
data<-merge(summary,summary2,by="Sales_Rep_Name")
data2<-merge(data,summary3,by="Year")
data2
data3<-data2%>%
mutate(higher_hor=(Avg_value>Year_avg), #if the repersentative yearly average sale is higher than the yearly average, it is coded as one
higher_ver=(Avg_value>Rep_avg) #if the repersentative yearly average sale is higher than the his or her own average, it is coded as one
)
data3
##4 Basic manipulation
```{r, message=FALSE}
#install package
install.packages("dplyr")
#import the package
library(dplyr)
```
install.packages("dplyr")
install.packages('plyr', repos = "http://cran.us.r-project.org")
```{r, message=FALSE}
#install package
install.packages("dplyr")
#import the package
library(dplyr)
install.packages("dplyr")
#install package
install.packages("dplyr")
#import the package
library(dplyr)
install.packages("dplyr")
options(repos = list(CRAN="http://cran.rstudio.com/"))
ex2<-ex%>%
arrange(Sales_Rep_Name,Year)
head(ex2)
#calculate the yearly average and sum sale for each employee
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(Avg_value=mean,Tot_value=sum))
#calculate the representative sale average
summary2<-ex2%>%
group_by(Sales_Rep_Name)%>%
summarise_at(vars(value),list(Rep_avg=mean))
#calcualte the yearly sale average
summary3<-ex2%>%
group_by(Year)%>%
summarise_at(vars(value),list(Year_avg=mean))
#calculate the yearly average and sum sale for each employee
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(Avg_value=mean,Tot_value=sum))
#calculate the representative sale average
summary2<-ex2%>%
group_by(Sales_Rep_Name)%>%
summarise_at(vars(value),list(Rep_avg=mean))
#calcualte the yearly sale average
summary3<-ex2%>%
group_by(Year)%>%
summarise_at(vars(value),list(Year_avg=mean))
summary
ex2
ex2
More information about dplyr can be found at[linked phrase](https://dplyr.tidyverse.org/)
More information about dplyr can be found at
[linked phrase](https://dplyr.tidyverse.org/)
More information about dplyr can be found at
[linked phrase](https://dplyr.tidyverse.org/)
[linked phrase](https://dplyr.tidyverse.org/)
View(summary)
#calculate the yearly average and sum sale for each employee
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(Avg_value=mean,Tot_value=sum))
#calculate the representative sale average
summary2<-ex2%>%
group_by(Sales_Rep_Name)%>%
summarise_at(vars(value),list(Rep_avg=mean))
#calcualte the yearly sale average
summary3<-ex2%>%
group_by(Year)%>%
summarise_at(vars(value),list(Year_avg=mean))
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(Avg_value=mean,Tot_value=sum))
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(Avg_value=mean,Tot_value=sum))
`{r,message=FALSE}
#Sort the dataset by Sale Rep & year in rising order
ex2<-ex%>%
arrange(Sales_Rep_Name,Year)
head(ex2)
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(Avg_value=mean,Tot_value=sum))
print(summary)
summary<-ex2%>%
group_by(Sales_Rep_Name,Year)%>%
summarise_at(vars(value), list(Avg_value=mean,Tot_value=sum))
print(summary)
View(summary)
