library(tidyverse)
library(forcats)

ggplot(gss_cat, aes(race)) +
  geom_bar()

dev.set(1)
ggplot(gss_cat, aes(rincome))+geom_bar()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  labs(x="Reported Income")

ggplot(gss_cat, aes(rincome))+geom_bar()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  labs(x="Reported Income")+coord_flip()

gss_cat %>%
      filter(!rincome%in%c("Not applicable"))%>%
      mutate(rincome=fct_recode(rincome,"Less than $10,000"="Lt $1000"))%>%
      mutate(rincome_na=rincome %in% c("No answer","Don't know","Refused"))%>%
      ggplot(aes(x = rincome, fill = rincome_na))+
      geom_bar()+
      coord_flip()+
      scale_fill_manual(values = c("FALSE" = "black", "TRUE" = "gray"))+
      theme(legend.position = "None")+
      labs(x="Reported Income",y="Number of Responses")
      
#Question 2
gss_cat%>%
  count(relig)%>%
  arrange(desc(n))%>%
  head(1)

ggplot(relig, aes(tvhours, fct_reorder(relig, tvhours))) +
  geom_point()

gss_cat%>%
  count(partyid)%>%
  arrange(desc(n))%>%
  head(1)


#Question3
dev.set(1)
gss_cat%>%
  count(relig,denom)%>%
  ggplot(aes(x=relig,y=denom,size=n))+
  geom_point()+
  theme(axis.text.x = element_text(angle =45,hjust = 1))

relig <- gss_cat %>%
  group_by(relig) %>%
  summarize(
    age = mean(age, na.rm = TRUE),
    tvhours = mean(tvhours, na.rm = TRUE),
    n = n()
  )

rincome2 <- gss_cat %>%
  group_by(rincome) %>%
  summarize(
    age = mean(age, na.rm = TRUE),
    tvhours = mean(tvhours, na.rm = TRUE),
    n = n()
  )
ggplot(
  rincome2,
  aes(tvhours, rincome)
) + geom_point()

ggplot(
  rincome2,
  aes(age, fct_relevel(rincome, "Not applicable"))
) +
  geom_point()

by_age <- gss_cat %>%
  filter(!is.na(age)) %>%
  group_by(age)%>%
  mutate(age_total = n())%>%
  group_by(age,marital)%>%
  mutate(disaggregate=n())%>%
  mutate(prop=disaggregate/age_total)

dev.set(1)

 ggplot(by_age, aes(age, prop, color = marital)) +
  geom_line(na.rm = TRUE)

dev.set(1)
by_age%>%
filter(!marital%in%c("No answer"))%>%
ggplot(
  aes(age, prop, color = fct_reorder2(marital, age, prop))) +
  geom_line() +
  labs(color = "marital")

gss_cat %>%
  filter(!is.na(tvhours)) %>%
  ggplot(aes(x = tvhours)) +
  geom_histogram(binwidth = 1)

gss_cat<-gss_cat%>%
  mutate(partyid2=fct_collapse(partyid,
    Rep=c("Strong republican", "Not str republican"),
    Demo=c("Not str democrat", "Strong democrat"),
    Indep=c("Ind,near rep", "Independent", "Ind,near dem"),
    Other=c("No answer", "Don't know", "Other party")
  ))

gss_cat<-gss_cat%>%
  group_by(year,partyid2)%>%
  mutate(spe=n())%>%
  group_by(year)%>%
  mutate(total=n())%>%
  mutate(part_prop=spe/total)

dev.set(1)
ggplot(gss_cat,aes(x=year,y=part_prop,color=partyid2))+
 geom_line()+labs(y="Proportion")
  

#combine several categories
library("stringr")
gss_cat<-gss_cat %>%
  mutate(
    rincome =
      fct_collapse(
        rincome,
        Unknown = c("No answer", "Don't know", "Refused", "Not applicable"),
        `Lt $5000` = c("Lt $1000", str_c(
          "$", c("1000", "3000", "4000"),
          " to ", c("2999", "3999", "4999")
        )),
        `$5000 to 10000` = str_c(
          "$", c("5000", "6000", "7000", "8000"),
          " to ", c("5999", "6999", "7999", "9999")
        )
      )
  ) 
  dev.set(1)
  ggplot(data=gss_cat,aes(x = rincome)) +
  geom_bar() +
  coord_flip()
